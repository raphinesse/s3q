name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.os }} - ${{ matrix.compiler }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        compiler: [
          gcc-10, gcc-11, gcc-12, gcc-13, gcc-14,
          clang-13, clang-14, clang-15, clang-16, clang-17, clang-18,
        ]
        build_type: [Debug, Release]
        include:
          # Use OS image that has the requested compiler pre-installed:
          # https://github.com/actions/runner-images
          - {os: 'ubuntu-22.04', compiler: 'gcc-10'}
          - {os: 'ubuntu-22.04', compiler: 'gcc-11'}
          - {os: 'ubuntu-24.04', compiler: 'gcc-12'}
          - {os: 'ubuntu-24.04', compiler: 'gcc-13'}
          - {os: 'ubuntu-24.04', compiler: 'gcc-14'}
          - {os: 'ubuntu-22.04', compiler: 'clang-13'}
          - {os: 'ubuntu-22.04', compiler: 'clang-14'}
          - {os: 'ubuntu-22.04', compiler: 'clang-15'}
          - {os: 'ubuntu-24.04', compiler: 'clang-16'}
          - {os: 'ubuntu-24.04', compiler: 'clang-17'}
          - {os: 'ubuntu-24.04', compiler: 'clang-18'}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set compiler variables
      id: set_compiler
      run: |
        COMPILER="${{ matrix.compiler }}"
        if [[ "$COMPILER" == gcc-* ]]; then
          VERSION="${COMPILER#gcc-}"
          echo "CC=gcc-$VERSION" >> $GITHUB_ENV
          echo "CXX=g++-$VERSION" >> $GITHUB_ENV
        elif [[ "$COMPILER" == clang-* ]]; then
          VERSION="${COMPILER#clang-}"
          echo "CC=clang-$VERSION" >> $GITHUB_ENV
          echo "CXX=clang++-$VERSION" >> $GITHUB_ENV
        else
          echo "Unknown compiler: $COMPILER"
          exit 1
        fi

    - name: Verify build tool versions
      run: |
        $CC --version
        $CXX --version
        cmake --version

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DCMAKE_C_COMPILER=$CC \
              -DCMAKE_CXX_COMPILER=$CXX \
              ..

    - name: Build
      run: |
        cd build
        cmake --build . -j $(nproc) --target all_tests

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure -j $(nproc)

    - name: Upload build artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
        path: |
          build/CMakeFiles/*.log
          build/CMakeCache.txt